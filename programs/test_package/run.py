import struct as st
from random import random
from package.package import *

'''

One file generated by run.py 
All is make with pseudo_random with seed=0

1 data batch for all

[for model in py_models]
	shuffle batch #save new data

	/// test juste model forward no sets
	set_input	#check
	forward		#check

	///	test with sets
	[for score in scores]
		[for opti in optimizers]
			[for echope in min_loops[opti]]	//sgd a besoin que d'un seul echope pour performer, momentum a un moment, donc au moins 2 loops
				set_input
				null_grad	#check
				forward		#check
				score.dloss	#check
				backward 	#check
				opti.opti 	#check
			[end]
		[end]	
	[end]
	
	[for gtic in gtics]
		set_input
		null_grad	#check
		forward		#check
		score.loss	#check
		gtic.opti 	#check
	[end]
[end]
'''

'''
Il faut sauve 1 data file pour chaque modele et fait un snapshot de Train_t ecrit dans kernel/py/train.py

Puis le code C va tester tout


en gros il y aura un `test_mdls/` avec un fichier data_n.bin  ou n est le n-eme model a tester et un fichier floats_n.bin avec les floats outputer par model_forward (Use_t and Cpu_t tests) et Train forward

'''

if __name__ == "__main__":
	for model in models:
		data = [random() for i in range(model['lines'] * model['inputs'])]

		for score in range(SCORES):
			for opti in range(OPTIS):
				for echopes in OPTI_TESTS_LOOP[opti]:
					pass

		for gtic in range(GTICS):
			pass